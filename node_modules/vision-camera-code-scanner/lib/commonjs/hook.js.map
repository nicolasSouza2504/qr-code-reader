{"version":3,"sources":["hook.tsx"],"names":["useScanBarcodes","types","options","barcodes","setBarcodes","frameProcessor","frame","detectedBarcodes"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEO,SAASA,eAAT,CACLC,KADK,EAELC,OAFK,EAGgC;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B,qBAAoB,EAApB,CAAhC;AAEA,QAAMC,cAAc,GAAG,gDAAmBC,KAAD,IAAW;AAClD;;AACA,UAAMC,gBAAgB,GAAG,oBAAaD,KAAb,EAAoBL,KAApB,EAA2BC,OAA3B,CAAzB;AACA,wCAAQE,WAAR,EAAqBG,gBAArB;AACD,GAJsB,EAIpB,EAJoB,CAAvB;AAMA,SAAO,CAACF,cAAD,EAAiBF,QAAjB,CAAP;AACD","sourcesContent":["import { Frame, useFrameProcessor } from 'react-native-vision-camera';\nimport { useState } from 'react';\nimport { runOnJS } from 'react-native-reanimated';\n\nimport { Barcode, BarcodeFormat, CodeScannerOptions, scanBarcodes } from '.';\n\nexport function useScanBarcodes(\n  types: BarcodeFormat[],\n  options?: CodeScannerOptions\n): [(frame: Frame) => void, Barcode[]] {\n  const [barcodes, setBarcodes] = useState<Barcode[]>([]);\n\n  const frameProcessor = useFrameProcessor((frame) => {\n    'worklet';\n    const detectedBarcodes = scanBarcodes(frame, types, options);\n    runOnJS(setBarcodes)(detectedBarcodes);\n  }, []);\n\n  return [frameProcessor, barcodes];\n}\n"]}